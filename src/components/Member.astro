---
export interface MemberType {
	id: string;
	name: string;
	description?: string | null;
  skills: string[];
  type: string;
  publicPhotoId?: string;
  publicPhotoName?: string;
  publicDescription?: string;
  publicLink?: string;
}
interface Props extends MemberType {

}

const {
  id,
  name,
  description,
  skills,
  type,
  publicPhotoId,
  publicDescription,
  publicLink,
  publicPhotoName,
} = Astro.props;
const apiUrl = import.meta.env.ROOT_API;

---

<li class="card w-72 bg-base-100 shadow-xl m-4 ">
  {publicPhotoId &&
	<figure >
    <a href={publicLink}><img src={publicPhotoName} alt={name} /></a>
	</figure>
  }
  {!publicPhotoId &&
	<figure >
    <a href={publicLink}><img src="/anon.webp" alt={name} /></a>
	</figure>
  }
	<div class="card-body">
    {publicLink &&
		<h2 class="card-title"><a href={publicLink}>{name}</a></h2>
    }
    {!publicLink &&
		<h2 class="card-title">{name}</h2>
    }
		<p>
			{publicDescription}
		</p>
		<ul class="flex flex-wrap">
			{skills?.map((skill: string)=> {
			return (
			<li class="badge badge-outline ml-1 mb-1">{skill}</li>
			)
			})}
		</ul>
	</div>
</li>
 <style>
</style>
